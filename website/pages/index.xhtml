<!--
  ~ Copyright (c) 2003-2022 Regents of the University of California and Broad Institute. All rights reserved.
  -->

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:t="http://myfaces.apache.org/tomahawk"
      xmlns:c="http://java.sun.com/jstl/core">
<ui:composition template="/templates/common-new.xhtml">

<ui:define name="pageTitle">
    GenePattern <h:outputText rendered="#{!empty runTaskBean.lsid}"> - #{runTaskBean.name}</h:outputText>
    <h:outputText rendered="#{!empty runTaskBean.jobId}"> Job - #{runTaskBean.jobId}</h:outputText>
</ui:define>

<ui:define name="headText">
<link  type="text/css" rel="stylesheet" media="screen" href="#{facesContext.externalContext.requestContextPath}/css/frozen/modules/styles/jquery.multiselect.css?version=#{aboutBean.buildTag}" />
<link  type="text/css" rel="stylesheet" media="screen" href="#{facesContext.externalContext.requestContextPath}/css/frozen/jMenu.jquery.css?version=#{aboutBean.buildTag}" />
<link  type="text/css" rel="stylesheet" media="screen" href="#{facesContext.externalContext.requestContextPath}/css/frozen/introjs.css?version=#{aboutBean.buildTag}" />
<link  type="text/css" rel="stylesheet" media="screen" href="#{facesContext.externalContext.requestContextPath}/css/frozen/jquery.tagsinput.css" />
<link  type="text/css" rel="stylesheet" media="screen" href="#{facesContext.externalContext.requestContextPath}/css/frozen/comments/jquery.comment.css"/>

<c:choose>
    <c:when test="#{uiBean.parameterGroups}">
        <link type="text/css" rel="stylesheet" media="screen" href="#{facesContext.externalContext.requestContextPath}/css/frozen/runtaskform_latest.css?version=#{aboutBean.buildTag}" />
    </c:when>
    <c:otherwise>
        <link  type="text/css" rel="stylesheet" media="screen" href="#{facesContext.externalContext.requestContextPath}/css/frozen/runtaskform.css?version=#{aboutBean.buildTag}" />
    </c:otherwise>
</c:choose>

<script src="#{facesContext.externalContext.requestContextPath}/js/jquery/comments/jquery.timeago.js"></script>
<script src="#{facesContext.externalContext.requestContextPath}/js/jquery/comments/jquery.autogrow-textarea.js"></script>
<script src="#{facesContext.externalContext.requestContextPath}/js/jquery/comments/jquery.comment.js"></script>


<script type="text/javascript" src="#{facesContext.externalContext.requestContextPath}/js/jquery/jquery.multiselect.js?version=#{aboutBean.buildTag}"></script>
<script type="text/javascript" src="#{facesContext.externalContext.requestContextPath}/js/jquery/jquery.validate.js?version=#{aboutBean.buildTag}"></script>
<script type="text/javascript" src="#{facesContext.externalContext.requestContextPath}/js/jquery/intro.js?version=#{aboutBean.buildTag}"></script>
<script type="text/javascript" src="#{facesContext.externalContext.requestContextPath}/js/gp_tours.js?version=#{aboutBean.buildTag}"></script>
<script type="text/javascript" src="#{facesContext.externalContext.requestContextPath}/js/jquery/jquery.tagsinput.js"></script>

<script type="text/javascript" language="javascript">
/* <![CDATA[ */
function callManagedBean(elExpression, parameters) {
    jq.ajax({
        type : "POST",
        url : '#{facesContext.externalContext.requestContextPath}/anyThingAtAll.ajax',
        data : parameters + '&el=' + elExpression,
        dataType : "json",
        success : function(data, textStatus, jqXHR) {
            receiveResponse(jqXHR);
        },
        error : function(data, textStatus, jqXHR) {
            alert('Error ' + jqXHR.status + ' -- ' + jqXHR.statusText);
        }
    });
}

// The callback function - receive response from server
function receiveResponse(req) {

    if (req.readyState == 4) {
        if (req.status == 200) { // only if "OK"
            showCode(req.responseText);
        }

    }
}

// The callback function - receive response from server
function receiveResponse(req) {

    if (req.readyState == 4) {
        if (req.status == 200) { // only if "OK"
            showCode(req.responseText);
        }

    }
}

var showDescriptions = #{runTaskBean.showParameterDescriptions};
function toggleDescriptions() {
    var elements = document.getElementsByClassName("parameter_description");

    showDescriptions = !showDescriptions;
    var display = "none";
    if (showDescriptions) {
        display = "";
    }
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        e.style.display = display;
    }

    var params = 'value=' + showDescriptions;
    callManagedBean("runTaskBean.updateShowParameterDescriptions", params);
}

function closeCode() {
    jq('#codeDiv').hide();
}

function showCode(code) {
    var txt = new String(code).escapeHTML() + "<br /><br />";
    jq('#codeDiv').html(txt);
    jq('#codeDiv').show();

}

function viewCode() {
    var language = $F('gp_languageSelector');
    if (language == '- Language -') {
        window.alert('Please select a language');
        return false;
    }
    var form = jq('#taskForm').get(0);

    var params = 'language=' + language;
    for (var i = 0; i < form.elements.length; i++) {
        var e = form.elements[i];
        if (e.name != 'gp_languageSelector') {
            params += "&" + e.name + "=" + e.value;
        }
    }
    callManagedBean("jobsBean.taskCode", params);

}

// sets the value of a URL input field to specified value
// elementId input parameter id.
// value value to set field to.
function setInputField(elementId, value, groupId) {
    // See if the field is a file
    if(groupId == undefined || groupId == null)
    {
        //no groupId was specified so just get the first group
        groupId = getFileGroupIdByIndex(elementId,  0);
    }

    // If it has a file type
    if ($.inArray(field_types.FILE,run_task_info.params[elementId].type) != -1)
    {
        var fileObjListings = getFilesForGroup(groupId, elementId);
        if(fileObjListings !== null && fileObjListings !== undefined)
        {
            validateMaxFiles(elementId, fileObjListings.length + 1);

            fileObjListings.push({"name": value});
            updateFilesForGroup(groupId, elementId, fileObjListings);
            updateParamFileTable(elementId, null, groupId);
            toggleFileButtons(elementId);
        }
    }
    else { // Otherwise, assume it's a directory
        setParameter(elementId, value);
    }

    // Hide the menus
    $('.popupMenu').hide();
}

function preventClose(event) {
    if (event.preventDefault) event.preventDefault();
    if (event.stopPropagation) event.stopPropagation();
}

function checkBatch(elementId) {
    makeBatch(elementId);
    jq(document.body).focus();
}

function validateForm() {
    var error = false;

    var messageString = "<ul style=\"font-weight:bold; color:red;\">";
    var numErrors = 0;
    for (var i = 0; i < requiredIds.length; i++) {
        var elementId = requiredIds[i];
        var displayName = requiredNames[i];

        var e = jq("#" + escapeJquerySelector(elementId)).get(0);

        var type = e.type;
        var value = null;
        var validate = true;
        var urlInput = null;
        if (type == "text" || type == "textarea") {
            value = e.value;
        } else if (type == 'file') {
            urlInput = jq("#" + escapeJquerySelector(elementId) + "_url").get(0);
            if (jq("#" + escapeJquerySelector(elementId) + "_div_multifile").length > 0) {
                if (jq("#" + escapeJquerySelector(elementId) + "_div_multifile").is(":visible")) {
                    value = jq("#" + escapeJquerySelector(elementId) + "_multifile").get(0).value;
                }
            } else if (jq("#" + escapeJquerySelector(elementId) + "_div_url").is(":visible")) {
                value = urlInput.value;
            } else {
                value = e.value;
            }
        } else {
            validate = false;
        }

        if (validate && (value == null || value == "")) {
            numErrors++;
            messageString += "<li>" + displayName + "</li>";
            e.className = "error";
            if (urlInput != null) {
                urlInput.className = "error";
            }
        } else {
            e.className = "";
            if (urlInput != null) {
                urlInput.className = "";
            }
        }
    }

    var d = jq("#errorMessageDiv").get(0);
    var t = jq("#errorMessageContent").get(0);
    if (numErrors > 0) {
        if (numErrors != 1) {
            jq("#errorMessageHeader").text("Please provide values for the following parameters:");
        } else {
            jq("#errorMessageHeader").text("Please provide a value for the following parameters:");
        }
        d.style.display = "block";
        messageString += "</ul>";
        jq("#errorMessageContent").text(messageString);
    }
    return numErrors == 0;
}


function showUrlInput(id) {
    jq("#" + escapeJquerySelector(id) + "_div_file").hide();
    jq("#" + escapeJquerySelector(id) + "_div_url").show();
}

function showFileInput(id) {
    jq("#" + escapeJquerySelector(id) + "_div_file").show();
    jq("#" + escapeJquerySelector(id) + "_div_url").hide();

}
/* ]]> */
</script>

</ui:define>

<ui:define name="body">
    <div id="eula-block">
    </div>

    <ui:include src="/pages/serverFileDialog.xhtml" />
    <ui:include src="/pages/uploads/uploadToDirectoryDialog.xhtml" />

    <t:div id="protocols" style="display: none;">
        <f:subview rendered="#{empty runTaskBean.splashPage}">
            <ui:include src="splashpage.xhtml" />
        </f:subview>
        <f:subview rendered="#{runTaskBean.splashPage == 'resources'}">
            <ui:include src="splashpageResources.xhtml" />
        </f:subview>
        <f:subview rendered="#{runTaskBean.splashPage == 'downloads'}">
            <ui:include src="splashpageDownloads.xhtml" />
        </f:subview>
        <f:subview rendered="#{runTaskBean.splashPage == 'help'}">
            <ui:include src="splashpageHelp.xhtml" />
        </f:subview>
    </t:div>

    <div id="loadingContent" style="display: none; text-align: center;">
        <img src="/gp/images/ajax.gif" height="150" width="150" alt="Loading..." style="margin-top: 50px;" />
    </div>

    <div id="jobResults" style="display: none;"></div>

    <div id="submitJob" style="display: none;">
        <div id="submitErrors"/>
        <div id="submitForm">
            <div>
                <div>
                    <button class="floatRight" id="cancelUpload">
                        Cancel
                    </button>
                </div>
                <div id="fileUploadDiv" class="clear"></div>
            </div>

            <div id="runTaskSettingsDiv">
                <div class="task_header" id="taskHeaderDiv">
                    <span id='task_name' class='module_header '/>
                <span id="task_version_main">
                    <label for="task_versions">
                        version
                    </label>
                    <select name='task_versions' id='task_versions'/>
                </span>

                    <div id="otherOptionsDiv" class="floatRight">
                        <img id="otherOptions" alt="other options" src="#{facesContext.externalContext.requestContextPath}/images/gear_blue_and_white.png" height="20"/>
                            <ul id="otherOptionsMenu" class="module-menu" style="display: none;">
                                <li>
                                    <a id="properties" href="#" onclick="jq('#otherOptionsMenu').hide();showProperties();">Properties</a>
                                </li>
                                <li>
                                    <a id="clone" href="#" onclick="jq('#otherOptionsMenu').hide();cloneTask();">Clone</a>
                                </li>
                                <li>
                                    <a id="export" target="_blank" onclick="jq('#otherOptionsMenu').hide();">Export</a>
                                </li>
                                <li>
                                    <a id="javaCode" class="viewCode" href="#" onclick="jq('#otherOptionsMenu').hide();">Java code</a>
                                </li>
                                <li>
                                    <a id="matlabCode" class="viewCode" href="#" onclick="jq('#otherOptionsMenu').hide();">MATLAB code</a>
                                </li>
                                <li>
                                    <a id="rCode" class="viewCode" href="#" onclick="jq('#otherOptionsMenu').hide();">R code</a>
                                </li>
                                <li>
                                    <a id="pythonCode" class="viewCode" href="#" onclick="jq('#otherOptionsMenu').hide();">Python code</a>
                                </li>
                                <li>
                                    <a onclick="jq('#otherOptionsMenu').hide();">
                                    <input name="toggleDesc" id="toggleDesc" type="checkbox" checked="checked" />
                                    <label for="toggleDesc">
                                        Show parameter descriptions
                                    </label>
                                    </a>
                                </li>
                            </ul>
                    </div>
                    <a class="floatRight" id ="documentation" href="#" target="_blank">Documentation</a>

                </div>
                <div class="clear" id="viewCodeDiv">
                    <img class="floatRight" alt="close view code text" id='removeViewCode' src='#{facesContext.externalContext.requestContextPath}/images/delete-blue.png'/>
                </div>

                <div class="clear propertiesContent solid-border paramgroup-spacing" id="viewProperties" style="display:none;">
                    <img class="floatRight" alt="close view code text" id='removeViewProperties' src='#{facesContext.externalContext.requestContextPath}/images/delete-blue.png'/>
                    <table>
                        <tr>
                            <td class="properties-label">Name</td>
                            <td class="properties-name"></td>
                        </tr>
                        <tr>
                            <td class="properties-label">LSID</td>
                            <td class="properties-lsid"></td>
                        </tr>
                        <tr>
                            <td class="properties-label">Description</td>
                            <td class="properties-description"></td>
                        </tr>
                        <tr>
                            <td class="properties-label">Author</td>
                            <td class="properties-author"></td>
                        </tr>
                        <tr>
                            <td class="properties-label">Privacy</td>
                            <td class="properties-privacy"></td>
                        </tr>
                        <tr>
                            <td class="properties-label">License</td>
                            <td class="properties-license"></td>
                        </tr>
                        <tr>
                            <td class="properties-label">Quality Level</td>
                            <td class="properties-quality"></td>
                        </tr>
                        <tr>
                            <td class="properties-label">Documentation</td>
                            <td class="properties-documentation"></td>
                        </tr>
                        <tr>
                            <td class="properties-label">Docker Image</td>
                            <td class="properties-dockerimage"></td>
                        </tr>
                        <tr>
                            <td class="properties-label properties-srcrepo-label">Source code</td>
                            <td class="properties-srcrepo"></td>
                        </tr>
                        <tr>
                            <td class="properties-label">Command Line</td>
                            <td class="properties-commandline"></td>
                        </tr>
                        <tr>
                            <td class="properties-label">Task Type</td>
                            <td class="properties-tasktype"></td>
                        </tr>
                        <tr>
                            <td class="properties-label">Categories</td>
                            <td class="properties-categories"></td>
                        </tr>
                        <tr>
                            <td class="properties-label">CPU Type</td>
                            <td class="properties-cpu"></td>
                        </tr>
                        <tr>
                            <td class="properties-label">Operating System</td>
                            <td class="properties-os"></td>
                        </tr>
                        <tr>
                            <td class="properties-label">Language</td>
                            <td class="properties-language"></td>
                        </tr>
                        <tr>
                            <td class="properties-label">Current Files</td>
                            <td class="properties-files"></td>
                        </tr>
                        <tr>
                            <td class="properties-label">Version Comment</td>
                            <td class="properties-versioncomment"></td>
                        </tr>
                        <tr>
                            <td class="properties-label">File Formats</td>
                            <td class="properties-formats"></td>
                        </tr>
                    </table>
                    <div class="properties-children"></div>
                </div>

                <div id="betaInfoDiv"></div>
                <table id="description_main">
                    <tbody>
                    <tr>
                        <td id="mod_description">

                        </td>
                        <td id="source_info">
                            <div id="source_info_tooltip"></div>
                        </td>
                    </tr>
                    </tbody>
                </table>

                <hr class="clear"/>

                <div>
                <span class="otherControlsDiv">
                    * required field
                </span>
                <span class="submitControlsDiv floatRight">
                    <button class="Reset"><img src="#{facesContext.externalContext.requestContextPath}/images/reset.gif" width="16" height="16" alt="Reset" class="buttonIcon"/> Reset </button>
                    <button class="Run"><img src="#{facesContext.externalContext.requestContextPath}/images/run-green.gif" width="16" height="16" alt="Run" class="buttonIcon"/> Run </button>
                </span>
                </div>

                <hr class="clear"/>
                <!--<table>
                    <tr>
                        <td><b>Notes:</b> </td>
                        <td>
                            <textarea rows="4" cols="50"> This run tests running CMS using SNR test statistic. </textarea>
                        </td>
                    </tr>
                </table> -->

                <div id="missingTasksDiv"></div>
                <div id="paramsListingDiv">
                    <form id="runTaskForm" action="#">
                        <table id="paramsTable"/>
                    </form>
                </div>

                <div id="runTaskMiscDiv">
                    <div class="pHeaderTitleDiv top-level-background">
                        <img src ='#{facesContext.externalContext.requestContextPath}/images/toggle_collapse.png' alt='toggle image' width='19' height='19' class='paramSectionToggle'/>
                        Comments
                    </div>
                    <div class="commentsContent paramgroup-spacing">
                        <textarea id="jobComment" placeholder="Add a comment..."/>
                    </div>

                   <div class="pHeaderTitleDiv top-level-background">
                        <img src ='#{facesContext.externalContext.requestContextPath}/images/toggle_collapse.png' alt='toggle image' width='19' height='19' class='paramSectionToggle'/>
                        Tags
                    </div>
                    <div class="tagsContent paramgroup-spacing">
                        <input id="jobTags"/>
                    </div>
                </div>
                <hr/>

                <div style="height: 40px;">
                <span class="floatLeft otherControlsDiv">
                </span>
                <span class="floatRight submitControlsDiv">
                    <button class="Reset"><img src="#{facesContext.externalContext.requestContextPath}/images/reset.gif" width="16" height="16" alt="Reset" class="buttonIcon"/> Reset </button>
                    <button class="Run"><img src="#{facesContext.externalContext.requestContextPath}/images/run-green.gif" width="16" height="16" alt="Run" class="buttonIcon"/> Run </button>
                </span>
                </div>
            </div>
        </div>
    </div>

    <script type="text/javascript">
        $(document).ready(function() {
            loadRunTaskForm();
            loadJobStatus(#{runTaskBean.jobId});
            loadJobResults('#{runTaskBean.jobResults}');
        });
    </script>
    <h:outputText rendered="#{empty runTaskBean.lsid and empty runTaskBean.jobId and empty runTaskBean.jobResults}">
        <script type="text/javascript">
            $(document).ready(function() {
                $("#protocols").show();
            });
        </script>
    </h:outputText>

</ui:define>

<!-- Pop-up menus  -->
<ui:define name="popupMenus">
</ui:define>

</ui:composition>
</html>
