<!--
  ~ Copyright (c) 2003-2022 Regents of the University of California and Broad Institute. All rights reserved.
  -->

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:ui="http://java.sun.com/jsf/facelets" xmlns:h="http://java.sun.com/jsf/html" xmlns:f="http://java.sun.com/jsf/core" xmlns:t="http://myfaces.apache.org/tomahawk" xmlns:c="http://java.sun.com/jstl/core">
    <ui:composition template="/templates/common.xhtml">
        <ui:define name="headText">

            <script type="text/javascript">

                /* <![CDATA[ */
                // Execute a jsf el expression on the server
                function callManagedBean(elExpression) {
					jq.ajax({
						type : "POST",
						url : '#{facesContext.externalContext.requestContextPath}/anyThingAtAll.ajax',
						data : 'el=' + elExpression,
						dataType : "json",
						success : function(data, textStatus, jqXHR) {
							receiveResponse(jqXHR);
						},
						error : function(data, textStatus, jqXHR) {
							alert('Error ' + jqXHR.status + ' -- ' + jqXHR.statusText);
						}
					});
                }

                // The callback function - receive response from server
                function receiveResponse(req) {
                    if (req.readyState == 4) {
                        if (req.status == 200) { // only if "OK"
                            update(req.responseText);
                        }

                    }
                }


                var timerID = 0;
                function startPolling(elExpression, interval) {
                	setTimeout(function() {
						callManagedBean(elExpression);
					}, interval);
                    timerID = setTimeout("startPolling('" + elExpression + "', " + interval + ")", interval);
                }

                function stopPolling() {
                    if (timerID) {
                        clearTimeout(timerID);
                        timerID = 0;
                    }
                }

                /* Update the page from the status objects.  Example jsonString ...
                 * [{"lsid":"urn:lsid:broad.mit.edu:cancer.software.genepattern.module.analysis:00030:1","status":true},
                 *  {"lsid":"urn:lsid:broad.mit.edu:cancer.software.genepattern.module.analysis:00052:1","status":true},
                 *  {"lsid":"urn:lsid:broad.mit.edu:cancer.software.genepattern.module.analysis:00002:1","status":true}]
                 */
                function update(jsonString) {

                    var complete = true;
                    var objArray = eval('(' + jsonString + ')');

                    for (var i = 0; i < objArray.length; i++) {
                        var installStatus = objArray[i];
                        var lsid = installStatus.lsid;
                        var cb = jq("[id='cb_" + lsid + "']").get(0);
                        if (installStatus.status == "success") {
                            if (cb != null) {
                                cb.src = "#{facesContext.externalContext.requestContextPath}/images/checkbox.gif";
                            }
                        }
                        else if (installStatus.status == "error") {
                            if (cb != null) {
                                cb.src = "#{facesContext.externalContext.requestContextPath}/images/red-x.gif";
                            }
                            var errorDivId = "error_" + lsid;
							jq("[id='" + errorDivId + "']").text(installStatus.message);
							jq(errorDivId).show();
                        }
                        else if (installStatus.status == "warning") {
                            if (cb != null) {
                                cb.src = "#{facesContext.externalContext.requestContextPath}/images/checkbox.gif";
                            }
							var warningDivId = "#warning_" + lsid;
							jq(warningDivId).html(installStatus.message);
							jq(warningDivId).show();
                        }
                        else {

                            // This suite is not finished (neither succes nor error)
                            complete = false;
                        }
                    }

                    if (complete == true) {
						jq("#progress_indicator").html("&#160;complete");
                        stopPolling();
                        var buttonPane = jq("#button_pane").get(0);
                        if (buttonPane != null) {
							jq(buttonPane).show();
                        }
                    }
                }

                /* ]]> */
            </script>
        </ui:define>
        <ui:define name="pageTitle">GenePattern | Installing Suites</ui:define>
        <ui:define name="body">
            <script type="text/javascript">
                startPolling("suiteInstallBean.installedSuiteString", 500);

            </script>

            <h:form>

                <h1>Installing Suites<span id="progress_indicator">...</span></h1>


                <table>
                    <!--  Loop through suites (SuiteInstallStatus beans) -->
                    <t:dataList var="suite" value="#{suiteInstallBean.suites}">
                        <tr>
                            <td>
                                <b>#{suite.name}</b>
                            </td>
                            <td>
                                <img src="#{facesContext.externalContext.requestContextPath}/images/spacer.gif" width="12" height="12" id="cb_#{suite.lsid}" />
                            </td>
                        </tr>
                        <tr>
                            <td colspan="2" valign="top" id="error_#{suite.lsid}" class="validation-error" style="font-weight:bold;color:red;display:none"></td>
                        </tr>
                        <tr class="taskperameter">
                            <td colspan="2" valign="top" id="warning_#{suite.lsid}" class="validation-warning" style="font-weight:bold;color:orange"></td>
                        </tr>
                    </t:dataList>
                </table>


                <div id="button_pane" style="display:none;">
                    <br />
                    <br />
                    <t:commandButton value="Done" action="home" />&#160;
                </div>
            </h:form>
        </ui:define>
    </ui:composition>
</html>
