<!--
  ~ Copyright (c) 2003-2022 Regents of the University of California and Broad Institute. All rights reserved.
  -->
<!DOCTYPE html PUBLIC "-/W3C/DTD XHTML 1.0 Transitional/EN" "http:/www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:t="http://myfaces.apache.org/tomahawk"
      xmlns:c="http://java.sun.com/jstl/core">
    <ui:composition>
        <ui:define name="headText">
            <script type="text/javascript" language="javascript">
                /* <![CDATA[ */
                function handleTreeClick(node) {
                    jq(node).parent().find("ins:first").trigger("click");
                    return false;
                }

                function showCorrectArrows() {
                	// Support old UI
                	var menuPanel = null;
                	if (jq("#left-nav-files").length === 0) { menuPanel = "#uploads"; }
                	else { menuPanel = "#left-nav-files"; }
                	
                    jq.each(jq(menuPanel + " .menuArrow").parent(), function (index, value) {
                        var fileID = jq(value).attr("id");
                        var menuID = "#menuDiv_" + fileID;
                        if (jq(menuID).length > 0) {    // Check to see if the file menu exists
                            jq(value).find("img").show();
                        }
                    });
                }
                
                var uploadWindow = null;

                function openUploadWindow(dirNameIn) {
                    //expecting dirNameIn to be the relativePath to the input directory
                    //need to encode this as valid request parameter, for example
                    //dirNameIn=sub/a&p
                    //dirName=sub%2Fa%26p
                    //dirNameIn=sub/with space
                    //dirName=sub%2Fwith%20space
                    var dirName=encodeURIComponent(dirNameIn);
                    if (uploadWindow == null) {
                        uploadWindow = window.open('', '#{uploadFilesBean.uploadWindowName}', 'width=620,height=410,status=no,menubar=no,location=no,toolbar=no,scrollbars=no');
                        var currentLoc = uploadWindow.location + "";
                        if (currentLoc.indexOf("/gp/pages/uploads/jumploader.jsf?dirName=" + dirName) == -1) {
                            uploadWindow.location = "/gp/pages/uploads/jumploader.jsf?dirName=" + dirName;
                        }
                        uploadWindow.focus();
                    }
                    else if (uploadWindow.closed) {
                        uploadWindow = window.open('', '#{uploadFilesBean.uploadWindowName}', 'width=620,height=410,status=no,menubar=no,location=no,toolbar=no,scrollbars=no');
                        var currentLoc = uploadWindow.location + "";
                        if (currentLoc.indexOf("/gp/pages/uploads/jumploader.jsf?dirName=" + dirName) == -1) {
                            uploadWindow.location = "/gp/pages/uploads/jumploader.jsf?dirName=" + dirName;
                        }
                        uploadWindow.focus();
                    }
                    else {
                        uploadWindow.focus();
                    }
                    jq("#left-nav-files").block({message:"<h5 style='line-height:14pt;'>You must <a href='#' style='font-weight:bold;' onclick='JavaScript:location.href = location.href;'>refresh</a> the page before uploads are updated.</h5>"});
                }
                
                
                /* ]]> */
            </script>
            <link href="/gp/js/themes/default/style.css" rel="stylesheet" type="text/css" />
            
            
            
        </ui:define>

        <h:form>
            <t:div>
                <div id="uploadTree"></div>
                <script type="text/javascript">
	                function urlToEncodedName(url) {
	                	if (url === null || url === undefined || url.indexOf("/gp/") === -1) { return null; }
	                	url = url.split("/gp/")[1];
	                	url = url.replace("/", "_");
	                	url = url.substring(url.indexOf("/") + 1);
	                	url = decodeURI(url);
	                	if (url.substring(url.length-1) === "/") {
	                		url = url.substring(0, url.length-1);
	                	}
	                	url = url.replace(/\//g,'%2F');
	                	url = url.replace(/[^a-zA-Z0-9]/g,'_');
	                	if (url === "") {
	                		url = "__2F";
	                	}
	                	return url;
	                }
                
                    jq("#uploadTree").jstree({
                        core:{
                            "html_titles":true
                        },

                        "json_data":{
                            "ajax":{
                                "url":function (node) {
                                    if (node === -1) {
                                        return "/gp/UploadFileTree/tree";
                                    }
                                    var gsURL = jq(node).find("a").attr("href");
                                    return "/gp/UploadFileTree/tree?dir=" + encodeURIComponent(gsURL)
                                },
                                "data":function (node) {
                                    return {
                                        id:node.attr ? node.attr("id") : 0
                                    };
                                }
                            }
                        },
                        "cookies":{
                            "save_opened":"uploadTab"
                        },
                        plugins:[ "themes", "json_data", "cookies" ]
                    });
                    jq("#uploadTree").bind("load_node.jstree", function (event, data) {
                        var iterate = null;

                        // Handle the case of the initial load
                        if (data["args"][0] === -1) {
                            iterate = jq(this).find("li");
                        }
                        else {
                            iterate = jq(data["args"][0]).find("li");
                        }

                        iterate.each(function (index) {

                            var node = iterate.get(index);
                            var anchor = $(node).find("a:first");
                            var name = anchor.attr("href");
                            if (name === null || name === undefined) { return; } 
                            name = urlToEncodedName(name);
                            if (name === null || name === undefined) { return; } 

                            // Add the id to the node
                            jq(node).attr("id", name);

                            // Check for the case of empty directories
                            var link = anchor.attr("href");
                            if (link === "#") return;

                            // Append menu arrow
                            if (!#{uiBean.newUI}) {
                                var arrow = document.createElement("img");
                                arrow.setAttribute("id", "Image_" + name);
                                arrow.setAttribute("class", "menuArrow");
                                arrow.setAttribute("src", "/gp/images/smallOptions.gif");
                                arrow.setAttribute("alt", "menu");
                                arrow.setAttribute("onmouseover", "MM_swapImage('Image_" + name + "','','/gp/images/smallOptions.gif',2);");
                                arrow.setAttribute("onmouseout", "MM_swapImgRestore();");
                                anchor.after(arrow);
                                menuRegistry._create("#Image_" + name, "#menuDiv_" + name);
                            }

                            // Set icon for broken uploads
                            var isPartialUpload = $(anchor).attr("data-partial") === "true";
                            var isDirectory = $(anchor).attr("data-kind") === "directory";
                            if (isPartialUpload) {
                                if (!isDirectory) {
                                    var icon = $(anchor).find("ins");
                                    icon.css("background-image", "url('/gp/images/iconBroken.gif')");
                                    $(anchor).attr("title", "This file is either currently uploading or the upload has failed.")
                                    $(anchor).tooltip();
                                }
                            }

                            // Create a file widget for this file
                            if (#{uiBean.newUI}) {
                                anchor.attr("onclick", "JavaScript:openFileWidget(this, '#menus-uploads'); return false;");
                            }
                        });
                        
                        jq("a em:contains('Empty Directory')").parent().bind("dragstart", function() { return false; });

                        // Set up drag and drop uploads
                        if (#{uiBean.newUI}) {
                            var folder_id = data.args[0];
                            if (folder_id === -1) return;
                            var ready = $("#uploadTree").data("dndReady");
                            if (!ready || !ready[folder_id]) {
                                initUploadTreeDND();
                            }
                        }

                        // Display the tooltips
                        $(document).tooltip();
                    });
                </script>
            </t:div>
        </h:form>
        <h:outputText rendered="#{uiBean.newUI}">
        
        
            
            <div id="upload-dropzone-wrapper">
              <span>Drag Files to Directories Above or</span>
              <div class="resumable-error">
			        Your browser, unfortunately, is not supported by Resumable.js. The library requires support for <a href="http://www.w3.org/TR/FileAPI/">the HTML5 File API</a> along with <a href="http://www.w3.org/TR/FileAPI/#normalization-of-params">file slicing</a>.
			      </div>
			     
			      <div class="resumable-drop" id="upload-dropzone-resumable" >
			        <a class="resumable-browse" style="color:darkgrey !important;">Drag Files Here</a>
			      </div>
			      
			      <div class="resumable-progress">
			        <table>
			          <tr>
			            <td width="100%"><div class="progress-container"><div class="progress-bar"></div></div></td>
			            <td class="progress-text" nowrap="nowrap"></td>
			            <td class="progress-pause" nowrap="nowrap">
			              <a href="#" onclick="r.upload(); return(false);" class="progress-resume-link"><img src="/gp/images/resume.png" title="Resume upload" /></a>
			              <a href="#" onclick="r.pause(); return(false);" class="progress-pause-link"><img src="/gp/images/pause.png" title="Pause upload" /></a>
			            </td>
			          </tr>
			        </table>
			      </div>
                
             
            </div>
            
            <h:outputText rendered="#{loginBean.globusEnabled}">
	        <div id="glb-form" style="display:none" >
	        	<form action="https://app.globus.org/file-manager" method="GET" id="glbBrowseForm" name="globusTransferForm" target="form-target">
	        		<input type="text" value="POST" name="method" />
	        		<input type="text" value="#{uiBean.baseURL}/GlobusTransferInServlet" name="cancelurl" />
	        		<input id="globusAction" type="text" value="#{uiBean.baseURL}/GlobusTransferInServlet" name="action" />
	        		<input id="globusFolderLimit" type="text" value="0" name="folderlimit" />
	        		<input id="globusFileLimit" type="text" value="5" name="filelimit" />
	        		<input id="globusTag" type="text" value="To GenePattern" name="label" />
	        	</form>
	        </div>
        </h:outputText>
            
        </h:outputText>
        <script type="text/javascript">
            $(document).ready(function() {
                //initUploads();
                getGlobusTransferStatus();
                initReusableJSUploads();
                
            });

            // Stupid IE hack to fix the dropzone display
            var isMSIE = navigator.userAgent.indexOf("Trident") != -1;
            if (isMSIE) {
                $('#left-nav').bind('tabsshow', function(event, ui) {
                    switch (ui.index){
                        case 2:
                            $('#upload-dropzone-wrapper').show();
                            break;
                        default:
                            $('#upload-dropzone-wrapper').hide();
                    }
                });

                var dropzone = $('#upload-dropzone-wrapper').detach();
                $('#left-nav').append(dropzone);
            }
        </script>
    </ui:composition>
</html>
