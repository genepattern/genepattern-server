<!--
  ~ Copyright (c) 2003-2022 Regents of the University of California and Broad Institute. All rights reserved.
  -->

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:t="http://myfaces.apache.org/tomahawk"
	xmlns:c="http://java.sun.com/jstl/core">
<ui:composition template="/templates/ajax.xhtml">
	<ui:define name="pageTitle">
        GenePattern | Job #{(!empty jobStatusBean.jobInfo ) ? jobStatusBean.jobInfo.jobNumber : "not set" }
    </ui:define>
	<ui:define name="headText">
        <link  type="text/css" rel="stylesheet" media="screen" href="#{facesContext.externalContext.requestContextPath}/css/frozen/gp_comments.css?version=#{aboutBean.buildTag}" />
        <link  type="text/css" rel="stylesheet" media="screen" href="#{facesContext.externalContext.requestContextPath}/css/frozen/gp_tags.css?version=#{aboutBean.buildTag}" />

        <script type="text/javascript" src="#{facesContext.externalContext.requestContextPath}/js/gpUtil.js"></script>

        <script type="text/javascript">

                //convert to tabbed pane if this is a pipeline with javascript visualization
                var hasJavascript = #{jobStatusBean.jobInfo.hasJavascript};
                var isPipeline = #{jobStatusBean.jobInfo.pipeline};

                var currentJobNumber = #{jobStatusBean.jobInfo.jobNumber};                

                function setEmailNotification(cb, jobId, userId, userEmail) {
                    var valid = userEmail != null &amp;&amp; userEmail.length > 0;
                    if (valid) {
                        valid = jcv_checkEmail(userEmail);
                    }
                    if (!valid) {
                        var em = prompt("Email on completion to?:");
                        if (em == null) {
                            cb.checked = false;
                            return;
                        }
                        else {
                            userEmail = em;
                            valid = jcv_checkEmail(userEmail);
                            if (!valid) {
                                cb.checked = false;
                                alert(userEmail + ' is not a valid email address');
                                return;
                            }
                        }
                    }
                    if (cb.checked) {
                        requestEmailNotification(cb, jobId, userEmail);
                    }
                    else {
                        cancelEmailNotification(cb, jobId, userEmail);
                    }
                }

                /* <![CDATA[ */

                function setShowExecutionLogs(cb, jobNumber) {
                    var action = cb.checked ? 'showExecutionLogs' : 'hideExecutionLogs';
                    var request = jq.ajax({
                        type:"POST",
                        url:'/gp/jobResults/' + jobNumber + '/' + action,
                        dataType:"json",
                        success:function (data, textStatus, jqXHR) {
                            location.reload();
                        },
                        error:function (data, textStatus, jqXHR) {
                            cb.checked = false;
                            alert('Error ' + jqXHR.status + ': Problem with Show Execution Logs checkbox');
                        }
                    });
                }

                var handlePermSuccess = function (o) {
                    if (o.responseText !== undefined) {
                        var data = eval('(' + o.responseText + ')');
                        if (data.success) {
                            document.getElementById("permissionsWorkingImage").src = '/gp/images/complete.gif';
                            if (data.isShared) {
                                document.getElementById("permissionsIcon").src = "/gp/images/lockOpen.gif";
                            } else {
                                document.getElementById("permissionsIcon").src = "/gp/images/lock.gif";
                            }
                        } else {
                            document.getElementById("permissionsWorkingImage").src = '/gp/images/error.gif';
                        }
                    }
                };

                var handlePermFailure = function (o) {
                    alert("permissions request failed");
                    document.getElementById("permissionsWorkingImage").src = '/gp/images/error.gif';
                };

                var permCallback =
                {
                    success:handlePermSuccess,
                    failure:handlePermFailure

                };

                function submitPermissionsRequest(form) {
                    document.getElementById("permissionsWorkingImage").style.display = '';
                    document.getElementById("permissionsWorkingImage").src = '/gp/images/spin.gif';
                    var permPostData = getPermissionsPostData(form);

                    var request = jq.ajax({
                        type:"POST",
                        url:'/gp/jobResults/' + currentJobNumber + '/setPermissions',
                        data:permPostData,
                        dataType:"json",
                        success:function (data, textStatus, jqXHR) {
                            handlePermSuccess(jqXHR);
                        },
                        error:function (data, textStatus, jqXHR) {
                            handlePermFailure(jqXHR);
                        }
                    });
                }

                function getPermissionsPostData(form) {
                    var postInfo = "jobNumber=" + currentJobNumber + "&";
                    for (var i = 0; i < form.elements.length; i++) {
                        if (form.elements[i].type == "radio" && form.elements[i].checked) {
                            postInfo += form.elements[i].name + "=" + form.elements[i].value + "&";
                        }
                    }
                    return postInfo;
                }

                function toggle(id, openLabel, closedLabel) {
                    var open = !(document.getElementById(id).style.display == 'none');
                    document.getElementById(id).style.display = open ? 'none' : '';
                    if (openLabel) {
                        document.getElementById(id + "Label").innerHTML = open ? closedLabel : openLabel;
                    }
                }

                var vizPollStarted = false;
                var vizKeys = new Array();
                var vizAppletTags = new Array();
                var vizAppletNames = new Array();
                var vizAppletIds = new Array();

                var vizAppletsToUpdate = new Array();

                function processVisualizers() {
                    //alert('checking for new visualizers...');
                    var jobId = vizAppletsToUpdate.pop();
                    while (jobId) {
                        //alert('new visualizer job: '+jobId);
                        runVisualizer(jobId);
                        jobId = vizAppletsToUpdate.pop();
                    }
                }
                
                function fixHostBug(appletString) {
                	var tagParts = appletString.split("><");
                	for (var i = 0; i < tagParts.length; i++) {
                		tagParts[i].replace(/http:\/\/.*\/gp\//, window.location.protocol + "//" + window.location.host + "/gp/");
                	}
                	return tagParts.join("><");
                }

                function addVisualizer(key, jobId, appletName, appletId, appletTag, openVisualizerFlag) {
                    //alert('addVisualizer, openVisualizerFlag='+openVisualizerFlag);
                    
                    // Host bug fix
                    appletTag = fixHostBug(appletTag);
                    
                    vizKeys['' + jobId] = key;
                    vizAppletNames['' + jobId] = appletName;
                    vizAppletIds['' + jobId] = appletId;
                    vizAppletTags['' + jobId] = appletTag;

                    if (openVisualizerFlag) {
                        vizAppletsToUpdate.push(jobId);
                    }
                }

                function runVisualizer(jobId) {
                    var key = vizKeys['' + jobId];
                    var appletName = vizAppletNames['' + jobId];
                    var appletId = vizAppletIds['' + jobId];
                    var appletTag = vizAppletTags['' + jobId];
                    //TODO: figure out why runVisualizerInSpan launches too many applet windows in FireFox and other browsers
                    runVisualizerInSpan(key, appletName, appletId, appletTag);
                    //runVisualizerInWindow is a workaround
                    //runVisualizerInWindow(key, appletName, appletId, appletTag);
                }

                function runVisualizerInSpan(key, appletName, appletId, appletTag) {
                    var vizSpanId = 'visualizerSpan' + key;
                    var vizSpan = document.getElementById(vizSpanId);
                    //alert('runVisualizerInSpan, vizSpanId='+vizSpanId);
                    vizSpan.innerHTML = '<' + 'applet' + appletTag + '</' + 'applet>';
                }

                function runVisualizerInWindow(key, appletName, appletId, appletTag) {
                    //alert('runVisualizerInWindow, key='+key+', appletName='+appletName);

                    var w = window.open();
                    //check for popup blocker
                    if (!w) {
                        alert('Popups not enabled! Click the "Open Visualizer" link on this page to open the visualizer.');
                        return;
                    }
                    var d = w.document;
                    d.open();
                    d.write("<h1>Visualizer Applet</h1>");
                    d.write("<p>appletName: ");
                    d.write(appletName);
                    d.write("</p>");
                    d.write("<p>appletId: ");
                    d.write(appletId);
                    d.write("</p>");

                    d.write('<');
                    d.write('applet ');
                    d.write(appletTag);
                    d.write('</');
                    d.write('applet>');
                    d.close();
                }

                function locationWithoutHash() {
                    return location.protocol+'//'+location.hostname+(location.port?":"+location.port:"")+location.pathname+(location.search?location.search:"");
                }

                function openJavascript(jobId, taskName, taskLsid, launchUrl)
                {
                    var currentVisualizer = window.location.hash;

                    var jsId = "javascript_" + jobId;

                    var div = $("#" + jsId);
                    if (div.length == 0) {
                        div = $("<div/>").addClass("jsViewerDiv").attr("id", "javascript_" + jobId);

                        if (!isPipeline) {
                            $("#jobResults").empty();
                            $("#jobResults").append(div);

                            //$("#main-pane").css("left", "0");
                            //$("#main-pane").css("overflow", "hidden");
                        }
                        else {
                            $("#main-pane").append(div);
                            //$("#main-pane").css("padding", "0px !important");
                        }
                    }

                    if (!document._jsViewerOpened && (currentVisualizer === "" || currentVisualizer === "#" + jobId)) {
                        document._jsViewerOpened = true;

                        $("table.group").css("display", "none");
                        $("#systemAlertMessage").hide();

                        if (getURLParameter("openVisualizers") == "true") {

                            div.gpJavascript({
                                taskName: taskName,
                                taskLsid: taskLsid,
                                jobId: jobId,
                                url: launchUrl,  //The URL to the main javascript html file
                                onCreateActionBar: function (element) {
                                    if (jobId !== undefined && jobId !== null && jobId.length > 0) {
                                        var moreOptionsMenu = $("<span id='jsViewerMoreMenu' class='glyphicon glyphicon-info-sign'></span>");
                                        element.append(moreOptionsMenu);

                                        moreOptionsMenu.click(function () {
                                            //open the slide out menu for the  job
                                            $("a[data-jobid='" + jobId + "']").click();
                                        });
                                    }
                                }
                            });

                            mainLayout.close('west');
                        }
                    }

                    // if this is a pipeline with a visualizer
                    if(isPipeline && hasJavascript)
                    {
                        $("#jobResultsTab").append(
                                $("<li></li>").append(
                                    $("<a href='#" + jsId + "' onclick=\"JavaScript:reloadJSVisualizerTab(" + jobId + ", '" + taskName + "', '" + taskLsid + "', '" + launchUrl + "')\">" + jobId + "</a>")
                                )
                        );
                        $("#main-pane").tabs("refresh");
                    }
                }

                function reloadJSVisualizerTab(jobId, taskName, taskLsid, launchUrl) {
                    var jsId = "javascript_" + jobId;
                    var div = $("#" + jsId);

                    console.log('CALLED');
                    // Reload this page
                    // $(".jsViewerDiv").empty();

                    div.gpJavascript({
                        taskName: taskName,
                        taskLsid: taskLsid,
                        jobId: jobId,
                        url: launchUrl,  //The URL to the main javascript html file
                        onCreateActionBar: function (element) {
                            if (jobId !== undefined && jobId !== null && jobId.length > 0) {
                                var moreOptionsMenu = $("<span id='jsViewerMoreMenu' class='glyphicon glyphicon-info-sign'></span>");
                                element.append(moreOptionsMenu);

                                moreOptionsMenu.click(function () {
                                    //open the slide out menu for the  job
                                    $("a[data-jobid='" + jobId + "']").click();
                                });
                            }
                        }
                    });
                }

                function attachMenus() {
                    var data = $("#main-pane").data("job-status-" + currentJobNumber);

                    if (data !== null && data !== undefined) {
                        // Initialize the job link
                        var jobLink = $(".jobresult-job");
                        jobLink.attr("data-jobid", data.jobId);
                        jobLink.attr("data-json", JSON.stringify(data));

                        // Initialize the job output files
                        for (var i = 0; i < data.outputFiles.length; i++) {
                            var file = data.outputFiles[i];
                            var fileLink = $(".jobresult-file-output[name='" + escapeJquerySelector(file.link.name) + "']");
                            fileLink.attr("data-kind", file.kind);
                            fileLink.attr("data-size", file.fileLength);
                            fileLink.attr("data-sendtomodule", JSON.stringify(file.sendTo));
                        }
                    }
                }
                
                $(document).ready(function () {
                	$("body").tooltip();
                	gpUtil.initToggleDiv("statusDetailsDiv"+ #{jobStatusBean.jobInfo.jobNumber}, 'Hide', 'Show');
                	gpUtil.initToggleDiv("inputParamsDiv"+ #{jobStatusBean.jobInfo.jobNumber},   'Hide', 'Show');
                	
                });

                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "/gp/rest/v1/jobs/" + currentJobNumber + "?includeSendTo=true&includeChildren=true",
                    dataType: "json",
                    success: function(data, textStatus, jqXHR) {
                        $(document).ready(function() {
                            // Save the resulting JSON
                            $("#main-pane").data("job-status-" + currentJobNumber, data);

                            // Attach the menus
                            attachMenus();
                        });
                    },
                    error: function(data, textStatus, jqXHR) {
                        if (typeof data === 'object') {
                            data = data.responseText;
                        }

                        showErrorMessage(data);
                    }
                });

                function initPendingStatus() {
                    $(document).ready(function() {
                        // Set up the congestion box
                        var jqCongestionTooltip = $("#congestion-tooltip");

                        $(".congestion")
                                .tooltip({
                                    items: "div",
                                    content: jqCongestionTooltip.html()
                                })
                                .click(function() {
                                    $("#congestion-tooltip").dialog({
                                        title: "Jobs Queue Status"
                                    }).show();
                                });
                        
                       
                        //  JTL to display the congestion ticket on page load
                        // but it sometimes repeats when a job is running and the page refreshes
                        //window.setTimeout(function() {
                        //	$(".congestion").trigger("mouseenter");
                        //}, 1000);
                        //window.setTimeout(function() {
                        //	$(".congestion").trigger("mouseleave");
                        //}, 4000);
                    });
                }

                initPendingStatus();
              
                
                
                /* ]]> */
            </script>

            <script type="text/javascript" src="#{facesContext.externalContext.requestContextPath}/js/gp_comments.js"></script>
            <script type="text/javascript" src="#{facesContext.externalContext.requestContextPath}/js/gp_tags.js"></script>
            <script type="text/javascript" src="#{facesContext.externalContext.requestContextPath}/js/jobResult.js"></script>

    </ui:define>

	<ui:define name="body">
    <h:outputText rendered="#{jobStatusBean.canViewJob and jobStatusBean.jobInfo.javascript and visualizerStatusBean.openVisualizers and !visualizerStatusBean.openNewWindow}">
        <script type="text/javascript">
            openJavascript('#{jobStatusBean.jobInfo.jobNumber}', '#{jobStatusBean.jobInfo.taskName}', '#{jobStatusBean.jobInfo.taskLSID}', '#{jobStatusBean.jobInfo.launchUrl}');
        </script>
    </h:outputText>
    <h:outputText rendered="#{jobStatusBean.canViewJob and jobStatusBean.jobInfo.javascript and visualizerStatusBean.openVisualizers and visualizerStatusBean.openNewWindow}">
        <script type="text/javascript">
            window.open("/gp/pages/jsViewer.jsf?jobNumber=" + '#{jobStatusBean.jobInfo.jobNumber}');
        </script>
    </h:outputText>
    <h:outputText rendered="#{jobStatusBean.canViewJob and (!visualizerStatusBean.openVisualizers or !visualizerStatusBean.openNewWindow)}">
                <div style="display:none;" class="on-job-status-page"></div>
                <h:outputText rendered="#{!empty jobStatusBean.jobInfo}">
                    <h:form>
                        <div id="poll_jobInfo">
                            <f:param name="jobNumber"
                                value="#{jobStatusBean.jobInfo.jobNumber}" />
                        </div>
                    </h:form>

                    <div class="statusReport">
                        <div style="text-align: right;">
                            <h:outputText rendered="#{jobStatusBean.jobInfo.hasVisualizer}">To launch visualizer click <img
                                    src="/gp/images/visualizer.gif" /> icon.</h:outputText>
                        </div>
                        <br />

                        <div id="emailNotificationPanel">
                            <h:outputText rendered="#{not jobStatusBean.finished}">
                                <div style="float: right; margin-right: 10px;" id="emailDiv">
                                    <h:form>
                                        <h:selectBooleanCheckbox
                                            value="#{jobStatusBean.sendEmailNotification}"
                                            onclick="setEmailNotification(this, #{jobStatusBean.jobInfo.jobNumber}, '#{jobStatusBean.currentUserId}', '#{jobStatusBean.currentUserEmail}');" /> Email Reminder
                                        </h:form>
                                </div>
                            </h:outputText>
                        </div>

                        <!--   div style="float:right;margin-right:10px;"><input type="checkbox" /> Show Execution Logs</div -->
                        <div style="float: right; margin-right: 10px;">
                            <h:form>
                                <h:selectBooleanCheckbox
                                    value="#{jobStatusBean.showExecutionLogs}"
                                    onclick="setShowExecutionLogs(this, #{jobStatusBean.jobInfo.jobNumber});" /> Show Execution Logs
                                </h:form>
                        </div>
                        <br /> <br />

                        <div id="jobContainer#{jobStatusBean.jobInfo.jobNumber}">
                            <div id="jobStatus#{jobStatusBean.jobInfo.jobNumber}">
                                <table class="title" cellpadding="0" cellspacing="0" border="0"
                                    id="jobTable#{jobStatusBean.jobInfo.jobNumber}">
                                    <tr>
                                        <td class="title">#{jobStatusBean.jobInfo.jobNumber}.
                                            <a class="jobresult-job" href="#" onclick="openJobWidget(this); return false;">#{jobStatusBean.jobInfo.truncatedTaskName} <span class="glyphicon glyphicon-info-sign" style="text-indent: 0px;"></span></a>
                                            <script type="text/javascript">
                                                // Attach the menus
                                                attachMenus();
                                            </script>
                                        </td>
                                        <td><h:outputText
                                                rendered="#{not empty jobStatusBean.jobInfo.inputParameters}">
                                                <div class="icon2">
                                                    <table cellpadding="0" border="0" cellspacing="0">
                                                        <tr>
                                                            <td><a
                                                                href="javascript:gpUtil.toggleDiv('inputParamsDiv#{jobStatusBean.jobInfo.jobNumber}', 'Hide', 'Show');"><img
                                                                    src="/gp/images/parameters.gif" align="left" height="24"
                                                                    vspace="4" /> </a></td>
                                                            <td><a style="color: #0066FF;"
                                                                href="javascript:gpUtil.toggleDiv('inputParamsDiv#{jobStatusBean.jobInfo.jobNumber}', 'Hide', 'Show');"><span
                                                                    id="inputParamsDiv#{jobStatusBean.jobInfo.jobNumber}Label">Show</span>
                                                                    Input <br />Parameters</a></td>
                                                        </tr>
                                                    </table>
                                                </div>
                                            </h:outputText> <h:outputText
                                                rendered="#{jobStatusBean.jobInfo.permissions.editPermissionsAllowed}">
                                                <div class="icon">
                                                    <a style="color: #0066FF;"
                                                        href="javascript:toggle('permissionsDiv', 'Hide', 'Edit')">
                                                        <h:outputText
                                                            rendered="#{jobStatusBean.jobInfo.permissions.shared}">
                                                            <img id="permissionsIcon" src="/gp/images/lockOpen.gif"
                                                                alt="" border="0" align="left" />
                                                        </h:outputText> <h:outputText
                                                            rendered="#{not jobStatusBean.jobInfo.permissions.shared}">
                                                            <img id="permissionsIcon" src="/gp/images/lock.gif" alt=""
                                                                border="0" align="left" height="24" vspace="4" />
                                                        </h:outputText> <span id="permissionsDivLabel">Edit</span><br />Sharing...
                                                    </a>
                                                </div>
                                            </h:outputText></td>

                                        <td width="30px">
                                            <h:outputText rendered="#{jobStatusBean.jobStatus.isPending and not jobStatusBean.jobStatus.hasError}">
                                                <script type="text/javascript">
                                                
                                                </script>
                                                
                                                <div id="status-congestion-light" class="congestion-light congestion #{jobStatusBean.congestionClass}">
                                                    <span class="congestion-icon">&#9679;</span><br/>
                                                    Pending
                                                </div>
                                                <div id="congestion-tooltip" style="display: none;">
                                                    <strong>Job Queue Status</strong><br/>
                                                    <h:outputText rendered="#{jobStatusBean.congestionClass == 'congestion-green'}">
                                                        ${jobStatusBean.congestionQueueSize} jobs ahead in queue. Light or no wait times expected for this job.
                                                    </h:outputText>
                                                    <h:outputText rendered="#{jobStatusBean.congestionClass == 'congestion-yellow'}">
                                                        ${jobStatusBean.congestionQueueSize} jobs ahead in queue. Moderate wait times expected for this job. Pending times of several hours are possible.
                                                    </h:outputText>
                                                    <h:outputText rendered="#{jobStatusBean.congestionClass == 'congestion-red'}">
                                                        ${jobStatusBean.congestionQueueSize} jobs ahead in queue. The job queue is experiencing severe wait times for this job. Pending times of several days are possible.
                                                    </h:outputText>
                                                    <h:outputText rendered="#{jobStatusBean.showEstimatedQueuetime}" escape="false">
                                                        <br/><br/>
                                                        <strong>Estimated Queueing Time</strong><br/>
                                                        #{jobStatusBean.estimatedQueuetime}
                                                    </h:outputText>
                                                </div>
                                            </h:outputText>
                                            <h:outputText rendered="#{jobStatusBean.jobStatus.isRunning and not jobStatusBean.jobStatus.hasError}">
                                                <img src="/gp/images/spin.gif"
                                                    alt="#{jobStatusBean.jobInfo.status}"
                                                    id="jobStatusIcon#{jobStatusBean.jobInfo.jobNumber}" />
                                            </h:outputText>
                                            <h:outputText rendered="#{jobStatusBean.jobStatus.isFinished and not jobStatusBean.jobStatus.hasError}">
                                                <img src="/gp/images/complete.gif"
                                                    alt="#{jobStatusBean.jobInfo.status}"
                                                    id="jobStatusIcon#{jobStatusBean.jobInfo.jobNumber}" />
                                            </h:outputText>
                                            <h:outputText rendered="#{jobStatusBean.jobStatus.hasError}">
                                                <img src="/gp/images/error.gif"
                                                    alt="#{jobStatusBean.jobInfo.status}" border="0"
                                                    id="jobStatusIcon#{jobStatusBean.jobInfo.jobNumber}" />
                                            </h:outputText>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td colspan="3" style="padding-left: 24px;">
                                            <strong>Source:</strong>
                                            <t:outputText rendered="#{not empty jobStatusBean.jobInfo.sourceIcon}">
                                                <img src="#{jobStatusBean.jobInfo.sourceIcon}" width="14px" height="14px" title="#{jobStatusBean.jobInfo.qualityDescription}" alt="#{jobStatusBean.jobInfo.qualityDescription}" style="position: relative; top: 3px"/>
                                            </t:outputText>
                                            #{jobStatusBean.jobInfo.source}<br />
                                            <h:outputText rendered="${jobStatusBean.jobInfo.userId != jobStatusBean.currentUserId}">
                                                <em>owned by:</em> ${jobStatusBean.jobInfo.userId},
                                            </h:outputText>
                                            <em>submitted:</em> <h:outputText value=" " /> <h:outputText value="#{jobStatusBean.jobInfo.dateSubmitted}" converter="gp" />,
                                            <h:outputText value=" " />
                                            <em>completed:</em> <h:outputText value=" " />
                                            <h:outputText value="#{jobStatusBean.jobInfo.dateCompleted}" converter="gp" />,
                                            <em>size:</em> <h:outputText value=" ${jobStatusBean.jobInfo.formattedSize}" />
                                        </td>
                                    </tr>
                                    <tr>
                                        <td colspan="3" style="padding-left: 24px;">
                                        <a style="color: #0066FF;" href="javascript:gpUtil.toggleDiv('statusDetailsDiv#{jobStatusBean.jobInfo.jobNumber}', 'Hide', 'Show');"><span
                                        id="statusDetailsDiv#{jobStatusBean.jobInfo.jobNumber}Label">Show</span> details</a>
                                        </td>
                                    </tr>
                                </table>
                                <ui:include src="jobComments.xhtml"/>
                                <ui:include src="jobTags.xhtml"/>
                            </div>


                            <h:outputText rendered="#{jobStatusBean.jobInfo.pipeline}">
                                <div>
                                    <ui:include src="jobStatus_indicator.xhtml">
                                        <ui:param name="jobInfo" value="#{jobStatusBean.jobInfo}" />
                                    </ui:include>
                                </div>
                            </h:outputText>

                            <h:outputText
                                rendered="#{jobStatusBean.jobInfo.permissions.editPermissionsAllowed}">
                                <div id="permissionsDiv" style="display: none;">
                                    <form name="permissionsForm">

                                        <table class="summary" cellpadding="0" cellspacing="0"
                                            border="0">
                                            <tr class="summaryTitle">
                                                <td width="300px">Sharing</td>
                                                <td>Access</td>
                                            </tr>
                                            <tr>
                                                <td><strong>Public</strong></td>
                                                <td><t:outputText escape="false"
                                                        rendered="#{jobStatusBean.jobInfo.permissions.publicAccessPermission == 'NONE'}">
                                                        <input type="radio" name="jobAccessPerm:*" value="NONE"
                                                            checked="checked" />None
                                                    </t:outputText> <t:outputText
                                                        escape="false"
                                                        rendered="#{jobStatusBean.jobInfo.permissions.publicAccessPermission != 'NONE'}">
                                                        <input type="radio" name="jobAccessPerm:*" value="NONE" />None
                                                    </t:outputText> <t:outputText
                                                        escape="false"
                                                        rendered="#{jobStatusBean.jobInfo.permissions.publicAccessPermission == 'READ'}">
                                                        <input type="radio" name="jobAccessPerm:*" value="READ"
                                                            checked="checked" />Read Only
                                                    </t:outputText> <t:outputText
                                                        escape="false"
                                                        rendered="#{jobStatusBean.jobInfo.permissions.publicAccessPermission != 'READ'}">
                                                        <input type="radio" name="jobAccessPerm:*" value="READ" />Read Only
                                                    </t:outputText> <t:outputText
                                                        escape="false"
                                                        rendered="#{jobStatusBean.jobInfo.permissions.publicAccessPermission == 'READ_WRITE'}">
                                                        <input type="radio" name="jobAccessPerm:*"
                                                            value="READ_WRITE" checked="checked" />Read and Write
                                                    </t:outputText> <t:outputText
                                                        escape="false"
                                                        rendered="#{jobStatusBean.jobInfo.permissions.publicAccessPermission != 'READ_WRITE'}">
                                                        <input type="radio" name="jobAccessPerm:*"
                                                            value="READ_WRITE" />Read and Write
                                                    </t:outputText></td>
                                            </tr>
                                            <c:if
                                                test="#{jobStatusBean.jobInfo.permissions.numGroupAccessPermissions gt 0}">
                                                <tr class="brown">
                                                    <td><strong>Group</strong></td>
                                                    <td></td>
                                                </tr>
                                                <t:dataList var="groupPermission" rowIndexVar="rowIndex"
                                                    value="#{jobStatusBean.jobInfo.permissions.groupAccessPermissions}">
                                                    <tr class="brown">
                                                        <td><img src="/gp/images/arrow2.gif" />#{groupPermission.groupId}</td>
                                                        <td><t:outputText escape="false"
                                                                rendered="#{groupPermission.permission == 'NONE'}">
                                                                <input type="radio"
                                                                    name="jobAccessPerm:#{groupPermission.groupId}"
                                                                    value="NONE" checked="checked" />None
                                                            </t:outputText> <t:outputText
                                                                escape="false"
                                                                rendered="#{groupPermission.permission != 'NONE'}">
                                                                <input type="radio"
                                                                    name="jobAccessPerm:#{groupPermission.groupId}"
                                                                    value="NONE" />None
                                                            </t:outputText> <t:outputText
                                                                escape="false"
                                                                rendered="#{groupPermission.permission == 'READ'}">
                                                                <input type="radio"
                                                                    name="jobAccessPerm:#{groupPermission.groupId}"
                                                                    value="READ" checked="checked" />Read Only
                                                            </t:outputText> <t:outputText
                                                                escape="false"
                                                                rendered="#{groupPermission.permission != 'READ'}">
                                                                <input type="radio"
                                                                    name="jobAccessPerm:#{groupPermission.groupId}"
                                                                    value="READ" />Read Only
                                                            </t:outputText> <t:outputText
                                                                escape="false"
                                                                rendered="#{groupPermission.permission == 'READ_WRITE'}">
                                                                <input type="radio"
                                                                    name="jobAccessPerm:#{groupPermission.groupId}"
                                                                    value="READ_WRITE" checked="checked" />Read and Write
                                                            </t:outputText> <t:outputText
                                                                escape="false"
                                                                rendered="#{groupPermission.permission != 'READ_WRITE'}">
                                                                <input type="radio"
                                                                    name="jobAccessPerm:#{groupPermission.groupId}"
                                                                    value="READ_WRITE" />Read and Write
                                                            </t:outputText></td>
                                                    </tr>
                                                </t:dataList>
                                            </c:if>
                                            <tr class="brown">
                                                <td style="whitespace: no-wrap;"><input type="button"
                                                    enabled="false" onclick="submitPermissionsRequest(this.form)"
                                                    value="Update Settings" /> <img
                                                    style="vertical-align: middle; display: none;"
                                                    src="/gp/images/spin.gif" id="permissionsWorkingImage" /></td>
                                                <td align="right"><a style="color: #0066FF;"
                                                    href="javascript:toggle('permissionsDiv', 'Hide', 'Edit')"><img
                                                        src="/gp/images/cross.gif" /> hide</a></td>
                                            </tr>
                                        </table>
                                        <br />
                                    </form>
                                </div>
                            </h:outputText>

                            <ui:include src="jobStatus_inputParams.xhtml">
                                <ui:param name="jobInfo" value="#{jobStatusBean.jobInfo}" />
                            </ui:include>

                            <ui:include src="jobStatus_statusDetails.xhtml">
                                <ui:param name="jobStatus" value="#{jobStatusBean.jobStatus}" />
                            </ui:include>

                            <h:form>
                                <div id="filePanel#{jobStatusBean.jobInfo.jobNumber}">
                                    <ui:include src="jobStatus_files.xhtml">
                                        <ui:param name="jobInfo" value="#{jobStatusBean.jobInfo}" />
                                        <ui:param name="indent" value="#{false}" />
                                    </ui:include>
                                </div>
                            </h:form>

                            <div>
                                <h:outputText rendered="#{jobStatusBean.jobInfo.pipeline}">
                                    <t:dataList var="child" value="#{jobStatusBean.allSteps}"
                                        rowIndexVar="idx">
                                        <h:outputText rendered="#{idx gt 0}">
                                            <ui:include src="jobStatus_child.xhtml">
                                                <ui:param name="childJobInfo" value="#{child}" />
                                            </ui:include>
                                        </h:outputText>
                                    </t:dataList>
                                </h:outputText>
                            </div>

                            <t:dataList var="visObj" value="#{visualizerStatusBean.visObjs}">
                                <span id="visualizerSpan#{visObj.key}"></span>
                                <!-- place applet tag here -->
                            </t:dataList>

                            <div>
                                <h:outputText rendered="false">
                                    <t:dataList var="visObj"
                                        value="#{visualizerStatusBean.newVisObjs}">
                                        <script type="text/javascript">
                                                addVisualizer('#{visObj.key}', '#{visObj.jobInfo.jobNumber}', '#{visObj.jobInfo.visualizerAppletName}', '#{visObj.jobInfo.visualizerAppletId}', '#{visObj.appletTag}', #{visualizerStatusBean.openVisualizers ? true : false});
                                            </script>
                                    </t:dataList>
                                </h:outputText>
                                <h:outputText
                                    rendered="#{jobStatusBean.jobStatus.isFinished and not jobStatusBean.jobStatus.hasError}">
                                    <t:dataList var="visObj" value="#{visualizerStatusBean.visObjs}">
                                        <script type="text/javascript">
                                                addVisualizer('#{visObj.key}', '#{visObj.jobInfo.jobNumber}', '#{visObj.jobInfo.visualizerAppletName}', '#{visObj.jobInfo.visualizerAppletId}', '#{visObj.appletTag}', #{visualizerStatusBean.openVisualizers ? true : false});
                                            </script>
                                    </t:dataList>

                                </h:outputText>
                                <script type="text/javascript">
                                        if (!vizPollStarted) {
                                            processVisualizers();
                                        }
                                    </script>

                            </div>
                        </div>
                        <br /> <br />

                        <div>
                            <h:outputText
                                rendered="#{not empty jobStatusBean.jobInfo.purgeDate}"
                                styleClass="purge_notice"
                                value="These job results are scheduled to be purged from the server on #{jobStatusBean.jobInfo.formattedPurgeDate}" />
                        </div>

                        <br /> <br />

                        <h:outputText rendered="#{jobStatusBean.jobInfo.visualizer and not jobStatusBean.jobStatus.hasError}">
                            <div>
                                <b>Problems Launching? See the following pages for help:</b>

                            </div>
                            <ul>
                                <li>
                                    <a href="http://www.genepattern.org/help" target="_blank">GenePattern Help Forum</a>
                                </li>
                                <li>
                                    <a href="http://www.genepattern.org/FAQ" target="_blank">GenePattern FAQ</a>
                                </li>
                                <li>
                                    <a href="http://www.genepattern.org/blog" target="_blank">GenePattern Blog</a>

                                </li>
                            </ul>
                        </h:outputText>

                        <h:outputText rendered="#{jobStatusBean.jobStatus.hasError and not jobStatusBean.jobInfo.visualizer}">
                            <div>
                                <b>For help resolving errors, see the following pages: </b>

                            </div>
                            <ul>
                                <li>
                                    <a href="http://www.genepattern.org/help" target="_blank">GenePattern Help Forum</a>
                                </li>
                                <li>
                                    <a href="https://www.genepattern.org/FAQ" target="_blank">GenePattern FAQ</a>
                                </li>
                                <li>
                                    <a href="https://www.genepattern.org//blog" target="_blank">GenePattern Blog</a>

                                </li>
                            </ul>
                        </h:outputText>

                        <br /> <br />
                    </div>
                    <table cellpadding="0" cellspacing="0" border="0"
                        style="display: none;" id="testTable">
                        <tr>
                            <td></td>
                        </tr>
                    </table>
                    <br />
                    <br />
                </h:outputText>
               

    </h:outputText>
    <h:outputText rendered="#{!jobStatusBean.canViewJob}">
        <h2>Permission Denied</h2>
    </h:outputText>
    </ui:define>

</ui:composition>
</html>
